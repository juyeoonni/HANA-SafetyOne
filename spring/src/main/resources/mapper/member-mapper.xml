<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kopo.SelfFDS.member.model.dao.MemberMapper">
    <!-- 회원 전체 조회 -->
    <select id="getAllMember" parameterType="com.kopo.SelfFDS.member.model.dto.Member"
            resultType="com.kopo.SelfFDS.member.model.dto.Member">
        SELECT *
        FROM member
    </select>

    <!-- 로그인 -->
    <select id="loginMember" parameterType="HashMap" resultType="com.kopo.SelfFDS.member.model.dto.Member">
        SELECT
            *
        FROM member
        where EMAIL = #{email}
          and PASSWORD = #{password}
    </select>

    <select id="selectNameOfMember" parameterType="String" resultType="com.kopo.SelfFDS.member.model.dto.Member">
        SELECT *
        FROM member
        where EMAIL = #{email}
    </select>


    <insert id="insertMember" parameterType="com.kopo.SelfFDS.member.model.dto.Member">
        INSERT INTO MEMBER (EMAIL, NAME, PASSWORD, PHONE,gender,ADDRESS,IDENTITYNUM)
        VALUES (#{email}, #{name},#{password}, #{phone},#{gender},#{address},#{identityNum})
    </insert>

    <update id="updateMember" parameterType="com.kopo.SelfFDS.member.model.dto.Member">
        UPDATE member
        SET password = #{password}, name = #{name}, phone = #{phone}
        WHERE EMAIL = #{email}
    </update>

    <delete id="deleteMember" parameterType="String">
        DELETE FROM member WHERE EMAIL = #{email}
    </delete>



<!--    card-->
    <!-- 카드 전체 조회 -->
    <select id="getAllCard" parameterType="com.kopo.SelfFDS.member.model.dto.Card"
            resultType="com.kopo.SelfFDS.member.model.dto.Card">
        SELECT *
        FROM card
    </select>

    <!-- 결제카드 & 비밀번호 -->
    <select id="selectPaymentCard" parameterType="HashMap" resultType="com.kopo.SelfFDS.member.model.dto.Card">
        SELECT
            *
        FROM card
        where cardId = #{cardId}
          and cardPassword = #{cardPassword}
    </select>

    <select id="selectCardOfEmail" parameterType="String" resultType="com.kopo.SelfFDS.member.model.dto.Card">
        SELECT *
        FROM card
        where EMAIL = #{email}
    </select>

    <select id="selectCardOfCardId" parameterType="String" resultType="com.kopo.SelfFDS.member.model.dto.Card">
        SELECT *
        FROM card
        where cardId = #{cardId}
    </select>

    <update id="updateSelfFdsStatus" parameterType="com.kopo.SelfFDS.member.model.dto.Card">
        UPDATE card
        SET SELFfdsSerStatus = #{selffdsSerStatus}
        WHERE cardId = #{cardId}
    </update>


<!--safetycard    -->
    <!--    지역이름 가져오기-->
    <select id="selectAllRegionName" resultType="String">
        SELECT regionName
        FROM REGION
        ORDER BY REGIONCODE
    </select>

    <!--    업종이름 가져오기-->
    <select id="selectAllBigCategory" resultType="String">
        SELECT CATEGORYBIG FROM CATEGORY
        GROUP BY CATEGORYBIG
    </select>

    <!--    업종 대분류로 소분류 가져오기-->
    <select id="selectSmallCategoryOfBigCategory" resultType="com.kopo.SelfFDS.member.model.dto.SafetyRegister">
        SELECT *
        FROM CATEGORY
        WHERE CATEGORYBIG = #{categoryBig}
    </select>



<!--    cardhistory-->
    <select id="selectAllCardHistoryOfCardId" resultType="com.kopo.SelfFDS.member.model.dto.CardHistory">
        SELECT *
        FROM CARDHISTORY
        WHERE cardId=#{cardId}
    </select>


    <!-- 카드별 지역통계 -->
    <select id="selectCountRegionOfCardId" resultType="com.kopo.SelfFDS.member.model.dto.CardHistory">
        SELECT regionName, COUNT(*) AS regionCnt, SUM(AMOUNT) AS amountSum
        FROM CARDHISTORY
        WHERE cardId = #{cardId}
        GROUP BY regionName
    </select>

    <!-- 카드별 대분류 업종통계 -->
    <select id="selectCountCategoryOfCardId" parameterType="String" resultType="com.kopo.SelfFDS.member.model.dto.CardHistory">
        SELECT CATEGORYBIG, COUNT(*) AS categoryCnt, SUM(AMOUNT) AS amountSum
        FROM CARDHISTORY
        WHERE CARDID = #{cardId}
        GROUP BY CATEGORYBIG;
    </select>

    <!-- 카드별 소분류 업종통계 -->
    <select id="selectCountSmallCategoryOfCardIdCategoryBig" resultType="com.kopo.SelfFDS.member.model.dto.CardHistory">
        SELECT CATEGORYBIG, CATEGORYSMALL as categorySmall, COUNT(*) AS categoryCnt, SUM(AMOUNT) AS amountSum
        FROM CARDHISTORY
        WHERE CARDID = #{cardId}
        GROUP BY CATEGORYBIG, CATEGORYSMALL
        HAVING CATEGORYBIG=#{categoryBig}
    </select>

    <!-- 카드별 거래시간통계 -->
    <select id="selectCountTimeOfCardId" resultType="com.kopo.SelfFDS.member.model.dto.CardHistory">
        SELECT SUBSTR(CARDHISTIME,1,2) AS TIME, COUNT(*) AS timeCnt, SUM(AMOUNT) AS amountSum
        FROM CARDHISTORY
        WHERE CARDID = #{cardId}
        GROUP BY SUBSTR(CARDHISTIME,1,2)
        ORDER BY TIME
    </select>


    <select id="selectAllSafetyCardOfCardId" resultType="com.kopo.SelfFDS.member.model.dto.SafetyCard">
        select * from safetycard
        WHERE CARDID = #{cardId}
    </select>

</mapper>

